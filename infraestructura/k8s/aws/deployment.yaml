apiVersion: &apiVersion& # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  namespace: arq-ref-demo
  name: arq-ref-demo-back
spec:
  selector:
    matchLabels:
      app: arq-ref-demo-back
  replicas: 1 # numero de replicas a crear para la aplicacion
  template:
    metadata:
      labels:
        app: arq-ref-demo-back
    spec:
      serviceAccountName: my-app-service-account # esta cuenta de servicio se debe crear para cada namespace con 3htp
      securityContext:
        fsGroup: 65534
      containers:
        #este nombre debe ser igual al nombre indicado arriba en la metadata
        - name: arq-ref-demo-back
          #change for image to deploy
          image: 068039659953.dkr.ecr.us-east-1.amazonaws.com/arq-ref-demo-back:1
          env:
            - name: TZ
              value: America/Bogota
            - name: LANG
              value: C.UTF-8
          ports:
            - containerPort: 8443
              protocol: TCP
          # especificar los recursos de CPU y Memoria requeridos
          # Backend : CPU Request: 100m, Limit: 300m - Memory Request: 512Mi, Memory Limit: 1536Mi
          # Frontend: CPU Request: 10m,  Limit: 50m -  Memory Request: 128Mi, Memory Limit: 256Mi
          # exemplo Frontned:
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          #Montaje de los volumenes para usar los archivos definidos en el configmap
          volumeMounts:
            - name: conf-volumen
              mountPath: /app/config/application.yml
              subPath: application.yml
          #Montaje de volumen para configurar timezone
            - name: conf-timezone-volumen
              mountPath: /etc/localtime
          #prueba para verificar que port de servicio este disponible antes de dejar en status READY el POD
          # #docs https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            httpGet:
              path: /anon/health
              port: 8443
          #prueba para verificar que port de servicio este disponible cada cierto tiempo
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 240
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              path: /anon/health
              port: 8443
      dnsPolicy: ClusterFirst
      # Montaje de los archivos de configuracion indicados en 'configsecret.yml'
      volumes:
        - name: conf-volumen
          secret:
            secretName: arq-ref-demo-config
      # Montaje de los archivos de configuraci√≥n de timezone desde el host (worker node)
        - name: conf-timezone-volumen
          hostPath:
              path: /usr/share/zoneinfo/America/Bogota