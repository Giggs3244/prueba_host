apply plugin: 'org.springframework.boot'

bootJar {
    baseName = "${microservice_name}"
}

dependencies {

    compile 'org.springframework.boot:spring-boot-starter'
    
    // ----------- DEPENDENCIAS ARQ BASE --------------
    //starter de la arq base con AWS
    compile "co.com.proteccion.base:cqrs-core-starter:${arquitectura_version}"

    // starter de la arq base con IBM MQ
    /*
    compile ("co.com.proteccion.base:cqrs-core-starter:${arquitectura_version}") {
        // por defecto la arquitectura va a trabajar con SQS de Amazon. Pero este demo trabaja con MQ
        exclude group: "co.com.proteccion.base", module: "adapters-aws-sqs"
    }
    //incluimos adaptador para IBMMQ
    compile "co.com.proteccion.base:adapters-ibm-mq:${arquitectura_version}"
    */

    // starter de la arq base con GCP
    /*
    compile ("co.com.proteccion.base:cqrs-core-starter:${arquitectura_version}") {
        // por defecto la arquitectura va a trabajar con SQS de Amazon. Pero este demo trabaja con MQ
        exclude group: "co.com.proteccion.base", module: "adapters-aws-sqs"
    }
    //incluimos adaptador para GCP pubsub
    compile "co.com.proteccion.base:adapters-gcp-pubsub:${arquitectura_version}"
    */

    /*
    // API de Storage de archivos V2
    compile "co.com.proteccion.base:entrypoints-storage-rest-api:${arquitectura_version}" //controladores rest
    // con almacenamiento en S3
    compile "co.com.proteccion.base:adapters-aws-s3:${arquitectura_version}"
     */

    // ----------- DEPENDENCIAS JANO --------------
    // entry point para habilitar los endpoint rest de jano para consulta de directivas, recursos, grupos)
    compile "co.com.proteccion.jano:entrypoints-jano-rest-controllers:${jano_version}"
    //al adicionar esta dependencia Jano trabaja con restricciones definidas en base de datos
    compile "co.com.proteccion.jano:data-jano-jpa-repository:${jano_version}"
    //al adicionar esta dependencia se agrega capacidad de caching a Jano
    compile "co.com.proteccion.jano:data-jano-cache-repository:${jano_version}"
    // para activar filtro de nivel de seguridad
    //compile "co.com.proteccion.jano:helpers-jano-seclevel-validator:${jano_version}"
    // para activar filtro de cartera de clientes
    //compile "co.com.proteccion.jano:helpers-jano-portfolio-validator:${jano_version}"

    // ----------- MODULOS DE LA APLICACION --------------
    //Modulos propios de ESTA aplicacion 
    compile project(':data-jpa-repository')
    compile project(':entrypoints-reactive-web')


    // Reactor debug Agent, para hacer seguimiento mas facil a los stack trace de los
    // errores de reactor.
    //compile 'io.projectreactor:reactor-tools:1.0.0.M1'
    
}
