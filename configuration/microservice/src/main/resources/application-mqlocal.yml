server:
  host: localhost
  port: 8443
  compression:
    enabled: true
    mime-types: application/json
    min-response-size: 2048
  error:
    includeStacktrace: ALWAYS
  ssl:
    key-store: classpath:server_certs_desarrollo.p12
    keyStoreType: PKCS12
    key-store-password: secret
    key-alias: localhost
    key-password: secret
  mq:
    host: localhost # En modo local depende de una imagen docker de un Broker MQ corriendo en la maquina del desarrollador.
    port: 1414
    queue-manager: QM1
    channel: DEV.APP.SVRCONN
    username: app
    password: passw0rd
    receive-timeout: 10000
    publishDestination: topic:PROTEC/ARQDEMO
    subscribeDestination: queue:Q.SUBS.ARQDEMO
    errorDestination:  topic:PROTEC/ARQDEMO/ERROR
    #uiDestination: xxx       #No aplica para MQ
    concurrency: 1-3
    developerMode: false


app.env: DemoApp con broker IBM MQ (local)!!

# ATENCION: Datasource demostrativo, por favor solicitar la creacion de un esquema de base de datos para su aplicacion.
spring:
  datasource:
    url: jdbc:derby:memory:microAppDb;create=true
    username:
    password:
    driver-class-name: org.apache.derby.jdbc.EmbeddedDriver
  jpa:
    hibernate:
      ddl-auto: update
  main:
    allow-bean-definition-overriding: true

logging:
  level:
    root: WARN
    co.com.proteccion: DEBUG
    org.springframework.http.codec.json: TRACE

securedApplication:
  name: appSegura                                       # Nombre App. Debe corresponder a un nombre de app asignado en Azure AD o Azure B2C
  idAppProteccion: 132                                  # Este id debe corresponder a un identificador interno de proteccion dado por Arquitectura.
  corsAllowOrigin: ANY                                  # Configuracion CORS 'Access-Control-Allow-Origin', ANY es equivalente a '*'
  corsAllowHeader: myHeaderName1, myHeaderName2         # Configuracion CORS 'Access-Control-Allow-Headers'. Si se desea permitir uno o mas headers adicionales en la peticion web
  corsExposeHeader: MyTestHeader                        # Configuracion CORS 'Access-Control-Expose-Headers'. Igual que el anterior pero en la respuesta.
  validateTokenIP: false
  whiteList: 10.100.224.251                              #Lista de direcciones Ips excentas de validacion de token JWT
  busBaseUrl: https://vaxtpmde71.proteccion.com.co:444   #URL base del bus de integracion en PRUEBAS (Pdn seria 'servicios.proteccion.com.co')
  useJsonRepository: false                               #Le indica a Jano si las tablas de Restricciones, Directivas y recursos estan en BD o en archivos JSON
  janoEnabled: true
  azure:
    scopeEmpleados: # scope de empleados
      clientId: 69f46a95-55ce-412d-8cfc-8c8b0ef18dbc              # El client ID debe solicitarse
      tenant: f47dcce4-02e7-4d88-a659-a2d0bbe170e7                # Este tenant id siempre es el mismo para Empleados (pru o pdn)
      clientSecret: 1BOGY9Y1UuUuLGUdVH9Eti-EJEMPLO-               # El client Secret debe solicitarse
#      apis:
#        - name: un-api
#          resource: https://proteccion.onmicrosoft.com/0867d048-ae82-4929-b150-073d0d5d2565
#          scope: un-scope
#    scopeEmpresas: # scope de empresas (si aplica)
#      clientId: 28965eac-289f-42ac-b61e-688f48f3f015
#      tenant: 4f16a139-48e9-4f8e-97fa-4f9fb860f85e
#      clientSecret: AwL+J0602mXtzvY+btJhP3-EJEMPLO-               # El client Secret debe solicitarse
#      profile: b2c_1a_signup_signin
#    scopeAfiliados: # scope de empresas (si aplica)
#      tenant: a2a697f2-8e04-4ccd-83c6-3dc6ce4a738d
#      clientId: 3fd33da0-e4d4-48be-8589-f91287d47d5e
#      clientSecret: RBwCrOh7XW2iN16HBwrA0A-EJEMPLO-               # El client Secret debe solicitarse
#      profile: b2c_1a_signin
#    audiences:
#      - <audiencia.1>
#      - <audiencia.2>
#  terceros:
#    - name: <nombre app en cognito>
#      clientId: <clientid de app en cognito>
#      tenant: <identificador del pool en cognito>